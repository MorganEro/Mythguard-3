generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Product {
  id          String     @id @default(uuid())
  name        String
  company     String
  description String
  featured    Boolean
  image       String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  clerkId     String
  favorites   Favorite[]
}

model Favorite {
  id        String   @id @default(uuid())
  productId String
  clerkId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Guardian {
  id          String            @id @default(uuid())
  name        String
  description String
  shortDescription String
  image       String
  programs    GuardianProgram[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  likes       Like[]
  contracts   Contract[]
}

model Program {
  id          String            @id @default(uuid())
  name        String
  description String
  image       String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  guardians   GuardianProgram[]
  contracts   Contract[]
}

model GuardianProgram {
  guardianId String
  programId  String

  guardian Guardian @relation(fields: [guardianId], references: [id], onDelete: Cascade)
  program  Program  @relation(fields: [programId], references: [id], onDelete: Cascade)

  @@id([guardianId, programId])
}

model Like {
  id        String   @id @default(uuid())
  clerkId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  guardian   Guardian @relation(fields: [guardianId], references: [id], onDelete: Cascade)
  guardianId String
}

model Contract {
  id          String   @id @default(uuid())
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  clerkId     String
  guardianId  String
  guardian    Guardian @relation(fields: [guardianId], references: [id], onDelete: Cascade)
  programId   String
  program     Program  @relation(fields: [programId], references: [id], onDelete: Cascade)
}
